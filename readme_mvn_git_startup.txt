1. ###How to create a mvn WEB project and push to github###

1.1 #Move to the right path
cd C:\_SoftwareDev\eclipse_projects

1.2 #Create maven project
###**********###
mvn archetype:generate -DgroupId=com.pland -DartifactId=J10_CarRental -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false

1.3 #Cover maven web project to eclipse web project
    #-Dwtpversion=2.0 tells Maven to convert the project into an Eclipse web project (WAR), not the default Java project (JAR)
###**********###
cd J10_CarRental
mvn eclipse:eclipse -Dwtpversion=2.0

1.4 #Import the project from eclipse

1.5 #Modify pom.xml file and add the dependecies you want in your project such as spring...
    #For details, refer to http://www.mkyong.com/maven/how-to-create-a-web-application-project-with-maven/
...

1.6 #access below url
###**********###
http://localhost:8080/J10_CarRental/

1.7 #To clean up all artifacts
mvn clean

1.8 #add it to git hub
cd C:\_SoftwareDev\eclipse_projects
git init J10_CarRental
cd .\J10_CarRental
git add .
git status
git commit -m "Initialization commit batch"

#If there is no repository on Github for your source, then you need do the following step
#1.8.1 create a repo on github through github web UI
#1.8.2 copy the url of new repo and use command below to associate local source to it
#git remote add origin https://github.com/RyanCA/J10_CarRental.git
#git remote -v 
#following is the result of above git remote command
origin  https://github.com/RyanCA/J10_CarRental.git (fetch)
origin  https://github.com/RyanCA/J10_CarRental.git (push)

git push origin master

2. ###How to pull source from github###
#You may need the below one if it is not assoicated with remote
#mkdir J10_CarRental
#git init J10_CarRental
#git remote add origin https://github.com/RyanCA/J10_CarRental.git
git pull https://github.com/RyanCA/J10_CarRental.git

###Note###
1. Once the repo created on Github, the name can't changed but the project name on eclipse can be changed.
For this one, the project name is called J01_Spring, later on I changed it to J10_CarRental to keep it consistent with repo name

3. ###How to use git tag###
git tag -a v0.1 -m 'Simple Spring MVC with Maven and Eclipse'
git tag
#push tag in git server
git push origin v0.1

4. ###git clone command###
git clone https://git.heroku.com/carrental2015.git

4. ###Heroku related###
4.1 heroku local install
https://devcenter.heroku.com/articles/getting-started-with-java#set-up

4.2 use cd command move to git project (such as under J10_CarRental project) and create heroku project
heroku create #create with system random name
heroku create carrental2015 # heroku create app given name
##################heroku ouput########################
C:\_SoftwareDev\eclipse_projects\J10_CarRental>heroku create carrental2015
Creating carrental2015... done, stack is cedar-14
https://carrental2015.herokuapp.com/ | https://git.heroku.com/carrental2015.git
Git remote heroku added
######################################################
heroku apps #heroku displays apps
git remote -v
heroku apps:destroy --app carrental2015 # heroku destroy app

4.3 use git push to put source code to heroku git and deploy app(This will stop running apps)
git push heroku master
##################heroku ouput########################
remote: -----> Discovering process types
remote:        Procfile declares types -> (none)
remote:
remote: -----> Compressing... done, 62.8MB
remote: -----> Launching... done, v5
remote:        https://carrental2015.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy.... done.
To https://git.heroku.com/carrental2015.git
 * [new branch]      master -> master
#######################################################

4.4 The application is now deployed. Ensure that at least one instance of the app is running:
heroku ps:scale web=1 #
heroku logs #to see log if the server starts successfully
4.5 Now visit the app at the URL generated by its app name. As a handy shortcut, you can open the website as follows:
heroku open
